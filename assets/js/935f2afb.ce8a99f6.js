"use strict";(self.webpackChunkneo_4_jperf_guide=self.webpackChunkneo_4_jperf_guide||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"neo4jperf_guide":[{"type":"link","label":"Introduction","href":"/","docId":"introduction"},{"type":"link","label":"Import data","href":"/neo4j-slow-import-data-performance","docId":"import-data"},{"type":"link","label":"Indexing","href":"/neo4j-slow-query-performance-issue","docId":"indexing"},{"type":"link","label":"Write speed","href":"/neo4j-slow-write-performance","docId":"write-speed"},{"type":"link","label":"Out of memory exception","href":"/neo4j-out-of-memory","docId":"memory"},{"type":"link","label":"Performance configuration","href":"/neo4j-performance-issue","docId":"performance-config"}]},"docs":{"import-data":{"id":"import-data","title":"Import data","description":"Executing wast amounts of transactions in a small time frame can be an interesting engineering challenge. One example of this activity is importing huge amounts of data into the Neo4j graph database. Importing data in the Neo4j graph database can come with some performance difficulties. Let\'s explore a few issues and how to handle them.","sidebar":"neo4jperf_guide"},"indexing":{"id":"indexing","title":"Indexing","description":"Ahh, indexing! One of the most common pitfalls in database performance in general, Neo4j included, is the usage of indexes. At first, it may seem what I need an index for in the Graph database. But graphs can be stored as some other data structure in the background, this means you can index and optimize for the storage data structure. The wrong usage of the index can make a database unusable, which can be quite painful. Let\'s see a few common issues with Neo4j database performance and indexes.","sidebar":"neo4jperf_guide"},"introduction":{"id":"introduction","title":"Introduction","description":"Welcome to the Neo4j Performance Guide!","sidebar":"neo4jperf_guide"},"memory":{"id":"memory","title":"Out of memory exception","description":"Neo4j is built on top of bulky JVM, and with every JVM comes familiar out-of-memory exceptions. Since JVM has internal restrictions, running a database inside of JVM can lead to additional issues.","sidebar":"neo4jperf_guide"},"performance-config":{"id":"performance-config","title":"Performance configuration","description":"Every database performance can depend on design, configuration, and the end hardware it runs on.","sidebar":"neo4jperf_guide"},"write-speed":{"id":"write-speed","title":"Write speed","description":"Fast reads are essential for every database. Once the database gets huge, it needs to perform very fast. But with huge amounts of data in the database, write speed can become an issue. The rising need for better write speed comes from the increased load on every database system and strive for better efficiency.","sidebar":"neo4jperf_guide"}}}')}}]);